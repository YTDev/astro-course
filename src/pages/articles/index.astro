---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import SearchForm from "../../components/SearchForm.astro";
import ArticleCard from "../../components/ArticleCard.astro";
import Pagination from "../../components/Pagination.astro";
import { ARTICLES_PER_PAGE } from "../../constants";

//whitout sorting
//const allBlogArticles: CollectionEntry<'blog'>[] = await getCollection('blog');

//with sorting

const allBlogArticles: CollectionEntry<'blog'>[] = 
(await getCollection('blog'))
.sort((a : CollectionEntry<'blog'>, b : CollectionEntry<'blog'>)=>
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf() //from recent to old 
);
//To memorize this, remember that (a, b) => a - b sorts numbers in ascending order.


const totalPages: number = Math.ceil(allBlogArticles.length/ARTICLES_PER_PAGE);


//+to convert a number and ! because it can be null
const currentPage: number | null = +Astro.url.searchParams.get('page')! || 1;


const articlesForPage: CollectionEntry<"blog">[]=allBlogArticles.slice(
  (currentPage-1)*ARTICLES_PER_PAGE,
  currentPage*ARTICLES_PER_PAGE)

---

<MainLayout title="Articles, Stories & Tutorials for Tech People">
    <SearchForm/>
    <br/>

      <!-- Main Grid -->
      <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
       
        { articlesForPage.map(article => (
          <ArticleCard article={article}/>
        )) }
  
      </div>

      <Pagination 
  currentPage={currentPage} 
  totalPages={totalPages} 
  disablePrevious={currentPage === 1} 
  disableNext={currentPage === totalPages} 
   
/>
    
  </MainLayout>